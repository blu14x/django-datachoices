[build-system]
requires = ["setuptools>=80.9.0"]
build-backend = "setuptools.build_meta"

[project]
name = "django-datachoices"
description = "A lightweight utility for Django that extends field choices to support complex data types."
version = "0.0.1b"
authors = [
  { name="blu14x" },
]
readme = "README.md"
requires-python = ">=3.6"
classifiers = [
    "Topic :: Utilities",
    "Operating System :: OS Independent",
    "Framework :: Django",
    "Programming Language :: Python",
]
license = { file = "LICENSE" }

[project.urls]
Homepage = "https://github.com/blu14x/django-datachoices"
Issues = "https://github.com/blu14x/django-datachoices/issues"

[tool.setuptools.packages.find]
where = ["src"]


[tool.ruff.lint]
select = [
    # Enabled by default
    "E4",
    "E7",
    "E9",
    "F",
    "UP", # Pyupgrade
    "I", # Isort
    "C90", # Mccabe (complexity check)
    "DJ", # Flake8 django extension
    "INT", # Flake8 gettext extension
    "RET", # Flake8 return extension
    "T20", # Flake8 print extension
    "S", # Flake8 bandit extension
    "C4", # Flake8 comprehension extension
    "LOG", # Flake8 logging extension
    "BLE", # Flake8 blind except extension
    "ERA", # Eradicate (commented out code)
    "D", # Pydocstyle
    "RUF", # Ruff extra rules
]

ignore = [
    "D201", # one blank line before class
    "D212", # multi line summary first line
    "D202", # no blank line after function
    "D100", # undocumented public module
    "D104", # undocumented public package
]

[tool.ruff.lint.per-file-ignores]

"**/migrations/*.py" = ["D", "RUF", "S"]
"**/manage.py" = ["D"]
"**/tests/*.py" = ["D", "S"]
"**/tests.py" = ["D", "S"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

docstring-code-format = true
docstring-code-line-length = "dynamic"