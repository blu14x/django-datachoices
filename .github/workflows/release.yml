name: Release

on:
  workflow_dispatch:
    inputs:
      no_operation_mode:
        description: 'No operation mode'
        type: boolean
        default: true
      force:
        description: 'Force release type'
        required: false
        type: choice
        options:
          - 'major'
          - 'minor'
          - 'patch'
          - 'prerelease'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false
    permissions:
      contents: write
    steps:
      - name: Setup | Checkout Repository on Release Branch
        uses: actions/checkout@v5
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Setup | Force release branch to be at workflow sha
        run: |
          git reset --hard ${{ github.sha }}

      - name: Evaluate | Verify upstream has NOT changed
        run: .github/scripts/verify-upstream.sh

      - name: Action | Semantic Version Release
        id: release
        uses: python-semantic-release/python-semantic-release@v10.4.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          no_operation_mode: ${{ inputs.no_operation_mode }}
          force: ${{ inputs.force }}

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v10.4.1
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}

      - name: Upload | Distribution Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: distribution-artifacts
          path: dist
          if-no-files-found: error

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: release
    if: ${{ needs.release.outputs.released == 'true' }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Setup | Download Build Artifacts
        uses: actions/download-artifact@v4
        id: artifact-download
        with:
          name: distribution-artifacts
          path: dist

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@v1
        with:
          packages-dir: dist
          print-hash: true
          verbose: true